<# /*
This file is part of ArgusLib.Runtime.InteropServices
Copyright (C) 2017 Tobias Meyer
License: Microsoft Reciprocal License (MS-RL)
*/ #>
<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".g.cs" #>
<# // ------------------------------------------------------ Code Start ------------------------------------------------------
string[] Types = {"Byte", "SByte", "Int16", "UInt16", "Int32", "UInt32", "Int64", "UInt64", "Single", "Double", "Complex"};

// --------------------------------------------------------- Code End ----------------------------------------------------- #>
#region Copyright and License
/*
This file is part of ArgusLib.Runtime.InteropServices
Copyright (C) 2017 Tobias Meyer
License: Microsoft Reciprocal License (MS-RL)
*/
#endregion

// AUTOGENERATED
// DO NOT MODIFY
namespace ArgusLib.Runtime.InteropServices
{
	using System;
	using System.Numerics;

<# // ------------------------------------------------------ Code Start ------------------------------------------------------
foreach (var type in Types)
{
// --------------------------------------------------------- Code End ----------------------------------------------------- #>
	public class AlignedArray<#=type#> : AlignedArray<<#=type#>>
	{
		public AlignedArray<#=type#>(byte[] buffer, int alignment, params int[] lengths)
			: base(buffer, alignment, lengths) { }

		public AlignedArray<#=type#>(int alignment, params int[] lengths)
			: base(alignment, lengths) { }

		protected unsafe override <#=type#> GetCore(IntPtr ptr) => *((<#=type#>*)ptr.ToPointer());
		protected unsafe override void SetCore(<#=type#> value, IntPtr ptr) => *((<#=type#>*)ptr.ToPointer()) = value;
	}

<# // ------------------------------------------------------ Code Start ------------------------------------------------------
}
// --------------------------------------------------------- Code End ----------------------------------------------------- #>
}